name: Deployment pipeline

env:
  CONTAINS_SKIP: ${{ contains(github.event.head_commit.message, '#skip') }}
  SECRET: ${{ secrets.SECRET }}
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  PORT: 3001

on:
  push:
    branches:
      - main
  pull_request:    
    branches: [main]    
    types: [opened, synchronize]


jobs:
  tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install backend dependencies
        run: | 
          cd blogilista-backend
          npm install
      - name: Run backend tests
        run: | 
          cd blogilista-backend
          npm run test
        env:
          TEST_MONGODB_URI: ${{ env.TEST_MONGODB_URI }}
          PORT: ${{ env.PORT }}
          SECRET: ${{ env.SECRET }}
      - name: Install frontend dependencies
        run: | 
          cd blogilista-backend/blogilista-frontend
          npm install
      - name: Check frontend style
        run: | 
          cd blogilista-backend/blogilista-frontend
          npm run lint
      - name: Run frontend tests
        run: | 
          cd blogilista-backend/blogilista-frontend
          npm run test
  
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push'}}
    concurrency: deploy-group    # optional: ensure only one action runs at a time
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: install frontend
        run: |
          cd blogilista-backend/blogilista-frontend
          npm install
      - name: build frontend
        run: |
          cd blogilista-backend/blogilista-frontend
          npm run build
      - name: install backend
        run: |
          cd blogilista-backend/blogilista-frontend
          npm run build
      - name: deploy app
        run: |
          cd blogilista-backend
          flyctl deploy --remote-only
        if: ${{ env.CONTAINS_SKIP == 'false' }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Deployment Success
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'An new version of Blogapp deployed by ${{ github.event.head_commit.author.username }}'
      - name: Deployment Failure
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Build failed: commit ${{ github.event.head_commit.url }} by ${{ github.event.head_commit.author.username }} broke the build :('

  tag_release:
    needs: [deploy]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' }}
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch